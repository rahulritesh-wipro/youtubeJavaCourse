*Learning Approach*

As in all other coputer languages the elements of java do not exist in isolation.
They work together to form the language as a whole.
This interrelatedness can make it difficult to describe one aspect of java without involving several others i.e. to understand one feature of java require 
prior knowlwedge of other feature.


*Understanding Object Oriented Programming*
OOP is at the core of java.
All java programs are to at least some extent object oriented.
OOP is so integral to java that it is best to uncerstand OOP basic principles before we begin writing even simple java program.
So let's begin with theoretical aspect of OOP.


*Two Paradigms*
All computer programs consist two elements - 
> code
>data

A program can be conceptually organized around its code or around its data. 
i.e. some programs are written around "What is happening" - code
some programs are written around "who is being affected" - data

These are the two paradigms that govern how a program is constructed.

Programs written around code/what is happening is called process-oriented Model.
Programs written around data/who is being affected is called object oriented Model.

*Process oriented programming*
1. Programs written around code/what is happening
2. characterizes a program as a series of linear steps (code), i.e code acting on data.
3. example - C language
4. Problems with this approach arises as program grows larger and more complex.

To manage the increasing complexity, the second approach (programs written around data) came in picture Object Oriented model/programming.

*Object Oriented programming*
1. Organizes a program around its data i.e. Objects and a set of well defined interfaces to that data.
2. An Object Oriented program can be characterized as "data controlling access to code"
3. by switching the controlling entity to data, you can achieve several organizational benefits.

*Abstraction*














